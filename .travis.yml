# This file was adapted from https://github.com/hvr/multi-ghc-travis
language: c

sudo: true

matrix:
  include:
    - env: TEST=main GHC_VER=8.0.2 CABAL_VER=1.24
      addons:
        apt:
            - alex-3.1.7
            - cabal-install-1.24
            - ghc-8.0.2
            - happy-1.19.5
          sources:
            - hvr-ghc

before_install:
  - unset CC
  - export CMD_HOME=`pwd`
  - export MY_HOME=${HOME}/build/jonaprieto
  - cd ${MY_HOME}
  - export AGDA_DIR=${MY_HOME}/.agda
  - mkdir .agda
  - touch .agda/defaults
  - echo "standard-library" >> .agda/defaults
  - touch .agda/libraries
  - echo "$MY_HOME/agda-stdlib/standard-library.agda-lib" >> .agda/libraries
  - cat .agda/defaults
  - cat .agda/libraries
  - git clone https://github.com/agda/agda-stdlib
  - cd  ${MY_HOME}
  - cd /home/travis
  - mkdir .agda
  - cd .agda
  - mkdir defaults
  - mkdir libraries
  - echo "standard-library" >> .agda/default
  - echo "${MY_HOME}/agda-stdlib/standard-library.agda-lib" >> .agda/libraries
  - cd ${MY_HOME}
  - mkdir ${HOME}/bin
  - export PATH=/home/travis/.cabal/bin:${MY_HOME}/bin:/opt/ghc/${GHC_VER}/bin:/opt/cabal/${CABAL_VER}/bin:/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:${PATH}

install:
 - ghc --version
 - cabal --version
 - cabal update
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ];
   then
     zcat $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz >
          $HOME/.cabal/packages/hackage.haskell.org/00-index.tar;
   fi
 - travis_retry cabal update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - cabal install --force-reinstalls --only-dependencies --enable-tests --enable-benchmarks --dry -v > installplan.txt
 - sed -i -e '1,/^Resolving /d' installplan.txt; cat installplan.txt

# check whether current requested install-plan matches cached package-db snapshot
 - if diff -u installplan.txt $HOME/.cabsnap/installplan.txt;
   then
     echo "cabal build-cache HIT";
     rm -rfv .ghc;
     cp -a $HOME/.cabsnap/ghc $HOME/.ghc;
     cp -a $HOME/.cabsnap/lib $HOME/.cabsnap/share $HOME/.cabsnap/bin $HOME/.cabal/;
   else
     echo "cabal build-cache MISS";
     rm -rf $HOME/.cabsnap;
     mkdir -p $HOME/.ghc $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin;
     cabal install --only-dependencies --enable-tests --enable-benchmarks;
   fi

# snapshot package-db on cache miss
 - if [ ! -d $HOME/.cabsnap ];
   then
      echo "snapshotting package-db to build-cache";
      mkdir $HOME/.cabsnap;
      cp -a $HOME/.ghc $HOME/.cabsnap/ghc;
      cp -a $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin installplan.txt $HOME/.cabsnap/;
   fi
 - cabal install cabal-install
 - export JOBS=2
# --------------------------------------------------------------------------
# Installing Agda from the source

 - cabal install cpphs-1.20.2

 - git clone https://github.com/asr/eagda.git ${MY_HOME}/eagda
 - cd ${MY_HOME}/eagda
 - cabal install --only-dependencies --force-reinstalls
 - cabal configure -v2
 - cabal build -v2 -j${JOBS}
 - cabal copy
 - cabal register
 - cd ${CMD_HOME}

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
- agda src/Data/Prop.agda
# EOF
